version: '3.9'

services:
  python-app:
    build: .
    container_name: python-app
    volumes:
      - .:/app
    depends_on:
      - mongodb
      - kafka
      - prometheus
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
    command: .distribuidos-venv/bin/python ./source/routes.py

  python-consumer:
    build: .
    container_name: python-consumer
    volumes:
      - .:/app
    depends_on:
      - kafka
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
    command: .distribuidos-venv/bin/python ./source/service/delivery_handler.py

  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: prometheus
    volumes:
      - ./prometheus-2.53.0.linux-amd64/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command: ./prometheus-2.53.0.linux-amd64/prometheus

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./data/db:/data/db
    command: mongod --bind_ip_all
    entrypoint: ["mongosh", "--file", "/source/service/scripts/load_mongodb.js"]

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    command: sh -c "kafka-server-start.sh config/server.properties & \
                    sleep 10 & \
                    kafka-topics.sh --create --topic medication-request --bootstrap-server kafka:9092"